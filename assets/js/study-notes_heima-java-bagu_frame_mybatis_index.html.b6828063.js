"use strict";(self.webpackChunkblogs2=self.webpackChunkblogs2||[]).push([[212],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},15402:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>m,data:()=>B});var e=a(20641);const l=a.p+"assets/img/img.d74ca568.png",n=a.p+"assets/img/img_1.726cbcac.png",t=a.p+"assets/img/img_2.23b98dbd.png",p=a.p+"assets/img/img_3.e2eca386.png",h=a.p+"assets/img/img_4.b3a6b3ec.png",r=a.p+"assets/img/img_5.c2abbe9a.png",d=a.p+"assets/img/img_6.75d5cd69.png",k=a.p+"assets/img/img_7.ddf46a7f.png",g=a.p+"assets/img/img_8.145c83e7.png",o=a.p+"assets/img/img_9.07db5eec.png",c=[(0,e.Fv)('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>视频来源：<a href="https://www.bilibili.com/video/BV1yT411H7YK/?vd_source=7138dfc78c49f602f8d3ed8cfbf0513d" target="_blank" rel="noopener noreferrer">新版Java面试专题视频教程，java八股文面试全套真题+深度详解（含大厂高频面试真题）</a></p><p>2023-10-08 P44 - P44 2023-10-09 P44 - P46</p></div><h3 id="_1、mybatis-执行流程" tabindex="-1"><a class="header-anchor" href="#_1、mybatis-执行流程"><span>1、MyBatis 执行流程</span></a></h3><p>通过该问题可以：</p><ul><li>理解了各个组件的关系</li><li>Sql 的执行过程（参数映射、 sql 解析、执行和结果处理）</li></ul><p>流程：</p><figure><img src="'+l+'" alt="img.png" tabindex="0" loading="lazy"><figcaption>img.png</figcaption></figure><p>总结：MyBatis 执行流程</p><ol><li>读取 MyBatis 配置文件： <code>mybatis-config.xml</code> 加载运行环境和映射文件</li><li>构造会话工厂 <code>SqlSessionFactory</code></li><li>会话工厂创建 <code>SqlSession</code> 对象（包含了执行 SQL 语句的所有方法）</li><li>操作数据库的接口， <code>Executor</code> 执行器，同时负责查询缓存的维护</li><li><code>Executor</code> 接口的执行方法中有一个 <code>MappedStatement</code> 类型的参数，封装了映射信息</li><li>输入参数映射</li><li>输出结果映射</li></ol><h3 id="_2、mybatis-是否支持延迟加载" tabindex="-1"><a class="header-anchor" href="#_2、mybatis-是否支持延迟加载"><span>2、Mybatis 是否支持延迟加载？</span></a></h3><p>答案：Mybatis 支持延迟记载，但默认没有开启</p><p>1、什么叫做延迟加载？</p><figure><img src="'+n+'" alt="img_1.png" tabindex="0" loading="lazy"><figcaption>img_1.png</figcaption></figure><ul><li>查询用户的时候，把用户所属的订单数据也查询出来，这个是立即加载</li><li>查询用户的时候，暂时不查询订单数据，当需要订单的时候，再查询订单，这个就是延迟加载。(可以局部和全局设置)</li></ul><p><img src="'+t+'" alt="img_2.png" loading="lazy"><img src="'+p+'" alt="img_3.png" loading="lazy"><img src="'+h+'" alt="img_4.png" loading="lazy"></p><p>2、延迟加载原理？</p><ol><li>使用 <code>CGLIB</code> 创建目标对象的代理对象</li><li>当调用目标方法 <code>user.getOrderList()</code> 时，进入拦截器 <code>invoke</code> 方法，发现 <code>user.getOrderList()</code> 是 null 值，执行 sql 查询 order 列 表</li><li>把 order 查询上来，然后调用 <code>user.setOrderList(List&lt;Order&gt; orderList)</code> ，接着完成 <code>user.getOrderList()</code> 方法的调用</li></ol><figure><img src="'+r+'" alt="img_5.png" tabindex="0" loading="lazy"><figcaption>img_5.png</figcaption></figure><p>总结： Mybatis 是否支持延迟加载？</p><ul><li>延迟加载的意思是：就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。</li><li>Mybatis 支持一对一关联对象和一对多关联集合对象的延迟加载。</li><li>在 Mybatis 配置文件中，可以配置是否启用延迟加载 <code>lazyLoadingEnabled=true|false</code> 。默认是关闭的。</li></ul><p>延迟加载原理？</p><ol><li>使用 <code>CGLIB</code> 创建目标对象的代理对象。</li><li>当调用目标方法时，进入拦截器 <code>invoke</code> 方法，发现目标方法是 null 值，执行 sql 查询。</li><li>获取数据以后，调用 set 方法设置属性值，再继续查询目标方法，就有值了。</li></ol><h3 id="_3、mybatis-的一级、二级缓存用过吗" tabindex="-1"><a class="header-anchor" href="#_3、mybatis-的一级、二级缓存用过吗"><span>3、Mybatis 的一级、二级缓存用过吗？</span></a></h3><p>缓存：</p><figure><img src="'+d+'" alt="img_6.png" tabindex="0" loading="lazy"><figcaption>img_6.png</figcaption></figure><ul><li>本地缓存，基于 <code>PerpetualCache</code> ，本质是一个 HashMap</li><li>一级缓存：作用域是 <code>session</code> 级别</li><li>二级缓存：作用域是 <code>namespace</code> 和 <code>mapper</code> 的作用域，不依赖于 <code>session</code></li></ul><h4 id="一级缓存" tabindex="-1"><a class="header-anchor" href="#一级缓存"><span>一级缓存</span></a></h4><p>一级缓存 : 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session ，当 Session 进行 flush 或 close 之后，该 Session 中的所有 Cache 就将清空。默认打开一级缓存。</p><p>以下代码只会<strong>执行一次SQL</strong>。因为他们是同一个 <code>SqlSession</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//2. 获取 SqlSession 对象，用它来执行 sql</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SqlSession</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sqlSession </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> sqlSessionFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//3. 执行 sql</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//3.1 获取 UserMapper 接口的代理对象</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UserMapper</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userMapper1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> sqlSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">UserMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UserMapper</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userMapper2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> sqlSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">UserMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> userMapper1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">selectById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;---------------------&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> userMapper2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">selectById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user1);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二级缓存" tabindex="-1"><a class="header-anchor" href="#二级缓存"><span>二级缓存</span></a></h4><p>二级缓存是基于 namespace 和 mapper 的作用域起作用的，不是依赖于 SQL session ，默认也是采用 PerpetualCache ， HashMap 存储</p><figure><img src="'+k+'" alt="img_7.png" tabindex="0" loading="lazy"><figcaption>img_7.png</figcaption></figure><p>开启步骤： <img src="'+g+'" alt="img_8.png" loading="lazy"><img src="'+o+'" alt="img_9.png" loading="lazy"></p><h4 id="二级缓存注意事项" tabindex="-1"><a class="header-anchor" href="#二级缓存注意事项"><span>二级缓存注意事项</span></a></h4><ol><li>对于缓存数据更新机制，当某一个作用域 ( <code>一级缓存 Session/ 二级缓存 Namespaces</code>) 的进行了新增、修改、删除操作后，默认该作用域下所有 select 中的缓存将被 clear</li><li>二级缓存需要缓存的数据实现 Serializable 接口</li><li>只有会话提交或者关闭以后，一级缓存中的数据才会转移到二级缓存中</li></ol><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h4><ol><li>Mybatis 的一级、二级缓存用过吗?</li></ol><ul><li>一级缓存 : 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session ，当 Session 进行 flush 或 close 之后，该 Session 中的所有 Cache 就将清空，默认打开一级缓存</li><li>二级缓存是基于 namespace 和 mapper 的作用域起作用的，不是依赖于 SQL session ，默认也是采用 PerpetualCache ， HashMap 存储。需要单独开启，一个是核心配置，一个是 mapper 映射文件</li></ul><ol start="2"><li>Mybatis 的二级缓存什么时候会清理缓存中的数据？</li></ol><p>当某一个作用域 ( <code>一级缓存 Session / 二级缓存 Namespaces</code>) 的进行了<strong>新增、修改、删除操作</strong>后，默认该作用域 下所有 select 中的缓存将被 clear 。</p>',40)],y={},m=(0,a(66262).A)(y,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,c)}]]),B=JSON.parse('{"path":"/study-notes/heima-java-bagu/frame/mybatis/","title":"框架 - Mybatis","lang":"zh-CN","frontmatter":{"title":"框架 - Mybatis","category":"面试","description":"提示 视频来源：新版Java面试专题视频教程，java八股文面试全套真题+深度详解（含大厂高频面试真题） 2023-10-08 P44 - P44 2023-10-09 P44 - P46 1、MyBatis 执行流程 通过该问题可以： 理解了各个组件的关系 Sql 的执行过程（参数映射、 sql 解析、执行和结果处理） 流程： img.pngimg....","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/vuepress-theme-home/study-notes/heima-java-bagu/frame/mybatis/"}],["meta",{"property":"og:site_name","content":"撄宁的博客"}],["meta",{"property":"og:title","content":"框架 - Mybatis"}],["meta",{"property":"og:description","content":"提示 视频来源：新版Java面试专题视频教程，java八股文面试全套真题+深度详解（含大厂高频面试真题） 2023-10-08 P44 - P44 2023-10-09 P44 - P46 1、MyBatis 执行流程 通过该问题可以： 理解了各个组件的关系 Sql 的执行过程（参数映射、 sql 解析、执行和结果处理） 流程： img.pngimg...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-27T14:43:11.000Z"}],["meta",{"property":"article:author","content":"樱宁"}],["meta",{"property":"article:modified_time","content":"2024-07-27T14:43:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"框架 - Mybatis\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-27T14:43:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"樱宁\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"1、MyBatis 执行流程","slug":"_1、mybatis-执行流程","link":"#_1、mybatis-执行流程","children":[]},{"level":3,"title":"2、Mybatis 是否支持延迟加载？","slug":"_2、mybatis-是否支持延迟加载","link":"#_2、mybatis-是否支持延迟加载","children":[]},{"level":3,"title":"3、Mybatis 的一级、二级缓存用过吗？","slug":"_3、mybatis-的一级、二级缓存用过吗","link":"#_3、mybatis-的一级、二级缓存用过吗","children":[]}],"git":{"createdTime":1722091391000,"updatedTime":1722091391000,"contributors":[{"name":"jiang","email":"948742327@qq.com","commits":1}]},"readingTime":{"minutes":3.82,"words":1147},"filePathRelative":"study-notes/heima-java-bagu/frame/mybatis/README.md","localizedDate":"2024年7月27日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>视频来源：<a href=\\"https://www.bilibili.com/video/BV1yT411H7YK/?vd_source=7138dfc78c49f602f8d3ed8cfbf0513d\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">新版Java面试专题视频教程，java八股文面试全套真题+深度详解（含大厂高频面试真题）</a></p>\\n<p>2023-10-08   P44 - P44\\n2023-10-09   P44 - P46</p>\\n</div>","autoDesc":true}')}}]);